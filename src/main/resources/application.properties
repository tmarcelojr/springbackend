# A JPA (Java Persistence API) is a specification of Java which is used to access, manage, and persist data between Java object and relational database.  It is considered as a standard approach for ORM (Object Relational Mapping).

# JPA can be as seen as the BRIDGE between object-oriented domain models and relational database systems. It's a specification, so it doesn't perform any operation by itself. It requires an ORM implementation, in our case we will be using the Hibernate ORM.

# Hibernate is a Java Framework which is used to store the Java objects in the relational database system. It's open source, lightweight, and an ORM. 

# READ MORE ABOUT: https://stackoverflow.com/questions/42135114/how-does-spring-jpa-hibernate-ddl-auto-property-exactly-work-in-spring#:~:text=record%2C%20the%20spring.-,jpa.,the%20property%20it%20knows%2C%20hibernate.
# 1. CREATE DATABASE
spring.jpa.hibernate.ddl-auto=update

# READ MORE ABOUT: https://www.baeldung.com/sql-logging-spring-boot
# 2. SHOW SQL COMMANDS TO THE DATABASE
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# READ ABOUT JDBC: https://spring.io/projects/spring-data-jdbc#overview
# We are using Hibernate as our ORM that sits between our application and JDBC (Java Database Connectivity) providing the missing link between object oriented model and relational database model of programming. Hibernate interacts with JDBC to talk to our database.
# Datasource: A datasource is a factory for connections to the physical databases
# 3. PROVIDE DATABASE URL
spring.datasource.url=jdbc:postgresql://ec2-54-83-21-198.compute-1.amazonaws.com/dd7ga43qr7r5or

# 4. PROVIDING DATABASE USERNAME
spring.datasource.username=jnhcwlqrtznnup

# 5. PROVIDE DATABASE PASSWORD
spring.datasource.password=abc0c81396cc510cfe72e9f1df1e315804b2cc321b7ef11f8dd62268fc7d0001

#server.port=8080

